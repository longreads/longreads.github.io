<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Long Reads</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml" />
<link rel="alternate" type="text/html" href="http://localhost:4000" />
<updated>2014-10-26T21:49:46-07:00</updated>
<id>http://localhost:4000/</id>
<author>
  <name>Noah</name>
  <uri>http://localhost:4000/</uri>
  
</author>


  

<entry>
  <title type="html"><![CDATA[Sorting bams with samtools]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/samtools-sort/" />
  <id>http://localhost:4000/samtools-sort</id>
  <published>2014-10-26T00:00:00-07:00</published>
  <updated>2014-10-26T00:00:00-07:00</updated>
  <author>
    <name>Noah</name>
    <uri>http://localhost:4000</uri>
    
  </author>
  <content type="html">&lt;p&gt;It turns out that &lt;code&gt;samtools sort&lt;/code&gt; command line options really do matter. When sorting a large bam file, samtools creates lots of intermediate files. The merge it runs to create the final sorted bam tries to read from all of them nearly simultaneously, thrashing even a pretty decent RAID drive (the read head on the drives are spending more time moving between files than actually reading any single file).&lt;/p&gt;

&lt;p&gt;A partial solution lies in increasing the amount of memory used by specifying the &lt;code&gt;-m&lt;/code&gt; option, for example &lt;code&gt;-m 5G&lt;/code&gt; to give each samtools thread 5GB of memory. The larger the amount of memory, the fewer intermediate files create, the less thrashing involved in the merge step.&lt;/p&gt;

&lt;p&gt;In my case, time to sort a 30x whole-genome BAM file went from days down to hours simply by specifying &lt;code&gt;-m 10G&lt;/code&gt; rather than the default of 768M.&lt;/p&gt;

&lt;p&gt;A more complete solution might be to use the &lt;a href=&quot;https://github.com/dnanexus/samtools&quot;&gt;DNAnexus fork&lt;/a&gt; of samtools, but it didn’t compile out of the box on OS X so I haven’t actually tried it (though the accompanying &lt;a href=&quot;http://devblog.dnanexus.com/faster-bam-sorting-with-samtools-and-rocksdb/&quot;&gt;blog post&lt;/a&gt; was helpful).&lt;/p&gt;

&lt;p&gt;Also, remember that newer versions of samtools sort can be parallelized to some extent using the &lt;code&gt;-@&lt;/code&gt; option, eg &lt;code&gt;-@4&lt;/code&gt; to specify 4 threads. Note that the memory allocation above is per thread, so in our example, we’d need about 4 x 5 = 20 GB of RAM.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/samtools-sort/&quot;&gt;Sorting bams with samtools&lt;/a&gt; was originally published by Noah at &lt;a href=&quot;http://localhost:4000&quot;&gt;Long Reads&lt;/a&gt; on October 26, 2014.&lt;/p&gt;</content>
</entry>

</feed>
